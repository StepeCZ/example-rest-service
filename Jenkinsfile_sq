node {
  stage('SCM-GitHub') {
    git 'https://github.com/StepeCZ/example-rest-service.git'
  }

  stage('Build') {
      bat 'mvn clean compile'
  }

  stage('Test') {
      bat 'mvn test'
  }

  stage('SonarQube') {
      def scannerHome = tool 'SQ_Scanner';
      withSonarQubeEnv('Sonar7.9') { // If you have configured more than one global server connection, you can specify its name
        bat "${scannerHome}/bin/sonar-scanner"
      }
  }

  stage("QualityGateWait"){
    timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
      def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
      if (qg.status != 'OK') {
        error "Pipeline aborted due to quality gate failure: ${qg.status}"
      }
  }
}